# auto-generated by grc.converter

id: isdbt_tmcc_encoder
label: TMCC Encoder
category: '[ISDBT]'

parameters:
-   id: mode
    label: Transmission Mode
    dtype: enum
    default: '3'
    options: ['1', '2', '3']
    option_labels: [MODE1(2K), MODE2(4K), MODE3(8K)]
-   id: one_seg_present
    label: Oneseg
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: nsegs_A
    label: Layer A Segments
    dtype: int
-   id: mod_scheme_A
    label: Layer A Modulation Scheme
    dtype: enum
    default: '4'
    options: ['4', '16', '64']
    option_labels: [QPSK, 16QAM, 64QAM]
-   id: conv_code_A
    label: Layer A Rate
    dtype: enum
    default: '0'
    options: ['0', '1', '2', '3', '4']
    option_labels: [1/2, 2/3, 3/4, 5/6, 7/8]
-   id: int_length_A
    label: Layer A Interleaver Length
    dtype: int
-   id: nsegs_B
    label: Layer B Segments
    dtype: int
-   id: mod_scheme_B
    label: Layer B Modulation Scheme
    dtype: enum
    default: '4'
    options: ['4', '16', '64']
    option_labels: [QPSK, 16QAM, 64QAM]
-   id: conv_code_B
    label: Layer B Rate
    dtype: enum
    default: '0'
    options: ['0', '1', '2', '3', '4']
    option_labels: [1/2, 2/3, 3/4, 5/6, 7/8]
-   id: int_length_B
    label: Layer B Interleaver Length
    dtype: int
-   id: nsegs_C
    label: Layer C Segments
    dtype: int
-   id: mod_scheme_C
    label: Layer C Modulation Scheme
    dtype: enum
    default: '4'
    options: ['4', '16', '64']
    option_labels: [QPSK, 16QAM, 64QAM]
-   id: conv_code_C
    label: Layer C Rate
    dtype: enum
    default: '0'
    options: ['0', '1', '2', '3', '4']
    option_labels: [1/2, 2/3, 3/4, 5/6, 7/8]
-   id: int_length_C
    label: Layer C Interleaver Length
    dtype: int

inputs:
-   domain: stream
    dtype: complex
    vlen: ${ 2**(10+int(mode)) }

outputs:
-   domain: stream
    dtype: complex
    vlen: ${ 2**(10+int(mode)) }
asserts:
- ${ nsegs_A + nsegs_B + nsegs_C == 13 }
- ${ nsegs_A > -1 }
- ${ nsegs_B > -1 }
- ${ nsegs_C > -1 }
- ${ int_length_A > -1 }
- ${ int_length_B > -1 }
- ${ int_length_C > -1 }
- ${ int_length_A < 16 }
- ${ int_length_B < 16 }
- ${ int_length_C < 16 }

templates:
    imports: import isdbt
    make: isdbt.tmcc_encoder(${mode}, ${one_seg_present}, ${mod_scheme_A}, ${mod_scheme_B},
        ${mod_scheme_C}, ${conv_code_A}, ${conv_code_B}, ${conv_code_C}, ${int_length_A},
        ${int_length_B}, ${int_length_C}, ${nsegs_A}, ${nsegs_B}, ${nsegs_C})

file_format: 1
